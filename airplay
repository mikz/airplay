#!/usr/bin/env ruby

require 'optparse'
require 'shellwords'
require 'net/http'

options = {}
apple_tv = 'apple-tv.local'

optparse = OptionParser.new do |opts|
  opts.banner = 'Usage: airplay [options] URL'

  opts.on('-fFORMAT', '--format=FORMAT', 'Set explicit format') do |format|
    options[:format] = format
  end

  opts.on('-hHOST', '--host=HOST', 'Set Apple TV host') do |host|
    apple_tv = host
  end
end

optparse.parse!

if ARGV.empty?
  warn optparse
  exit!
end

url = `youtube-dl --get-url #{options.flat_map { |k, v| ["--#{k}", v] }.shelljoin} #{ARGV.shelljoin}`.strip

puts "Will play: #{url} on #{apple_tv}"

start = <<-START
Content-Location: #{url}
Start-Position: 0
START

http = Net::HTTP.new(apple_tv, 7000)
http.keep_alive_timeout = 10

http.start do

  http.request_post('/play', start, 'User-Agent' => 'MediaControl/1.0', 'Content-Type' => 'text/parameters')

  state = :loading

  begin
    scrub = http.request_get('/scrub')
    status = scrub.body.split("\n").map { |line| line.split(': ') }.to_h

    duration = Float(status['duration'])

    case state
      when :loading
        if duration > 0
          state = :playing
        end
      when :playing
        if duration == 0
          state = :stopped
        end
      when :stopped
        exit
    end

    begin
      sleep 5
    rescue Interrupt
      exit
    end
  end while scrub.is_a?(Net::HTTPSuccess)
end
